
@*
* John Moreau
* CSS233
* 12/9/2023
*@
@model Product
@{
    @*Tried this for validation, worked well, but the book showed an easier way.*@
    //string isInvalid(string str) => ViewData.ModelState.GetFieldValidationState(str) == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid ? "is-invalid" : ""; // Source: https://stackoverflow.com/questions/39028177/how-to-check-in-razor-view-if-field-is-valid
    string title = ViewBag.Action + " Product";
    ViewData["Title"] = title;
}
<h2>@title</h2>
<form asp-controller="Product" asp-action="Edit" method="post">
    @*<div asp-validation-summary="All" class="text-danger"></div>*@ 
    <div class="row mb-3">
        <div class="col-2 mt-1">
            <label asp-for="Code" class="form-label col-2">Code</label>
        </div>
        <div class="col-5">
            <input asp-for="Code" class="form-control col-5 ">@*@isInvalid("Code")*@
        </div>
        <div class="col-5">
            @*@Html.ValidationMessage("Code")*@ @*Tried this, worked well, but the book showed this newer way.*@
            <span asp-validation-for="Code" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-2 mt-1">
            <label asp-for="Name" class="form-label col-2">Name</label>
        </div>
        <div class="col-5">
            <input asp-for="Name" class="form-control col-5">
        </div>
        <div class="col-5">
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-2 mt-1">
            <label asp-for="Price" class="form-label col-2">Price</label>
        </div>
        <div class="col-5">
            <input asp-for="Price" class="form-control col-5 ">
        </div>
        <div class="col-5">
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-2 mt-1">
            <label asp-for="ReleaseDate" class="form-label">Release Date</label>
        </div>
        <div class="col-5">
            <input asp-for="ReleaseDate" class="form-control " step="any" asp-format="{0:yyyy-MM-ddTHH:mm:ss}"> @* asp-format="{0:yyyy-MM-ddTHH:mm:ss}" SOURCE: https: //www.mikesdotnetting.com/article/352/working-with-dates-and-times-in-razor-pages-forms#:~:text =Alternatively%2C%20you%20can%20use%20the%20asp-format%20attribute%20on,itself%3A%20DateTime%3A%20%3Cinput%20class%3D%22form-control%22%20asp-for%3D%22DateTime%22%20asp-format%3D%22%20%7B0%3Ayyyy-MM-ddTHH%3Amm%7D%22%20%2F%3E *@
        </div>
        <div class="col-5">
            <span asp-validation-for="ReleaseDate" class="text-danger"></span>
        </div>
    </div>

    <input type="hidden" asp-for="Id" />

    <input type="hidden" asp-for="DateAdded" value="@(Model.DateAdded == string.Empty ? DateTime.Now.ToString("MM/dd/yyyy h:mm:ss tt") : Model.DateAdded)" />

    <div class="mb-3">
        <button type="submit" class="btn btn-primary">Save</button>
        <a asp-controller="Product" asp-action="List" asp-route-id="@Model?.Id"
           class="btn btn-primary">Cancel</a>
    </div>
</form>
<partial name="_ValidationScriptsPartial" />
@* Tried this first, worked well, but realized this was much less code ^
    @section validationScripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}*@